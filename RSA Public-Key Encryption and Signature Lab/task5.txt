#include <stdio.h>
#include <openssl/bn.h>
#define NBITS 256

void printBN(char *msg, BIGNUM * a)
{
	// Convert the BIGNUM to number string
	char*number_str = BN_bn2hex(a);

	// Print out the number string
	printf("%s %s\n", msg, number_str);

	// Free the dynamically allocated memory
	OPENSSL_free(number_str);
}

void verification(){

	//initalize all BIGNUMs needed
	BN_CTX *ctx = BN_CTX_new();
	BIGNUM *s = BN_new();
	BIGNUM *e = BN_new();
	BIGNUM *n = BN_new();
	BIGNUM *msg = BN_new();;
	
	//hardcode given values
	BN_hex2bn(&s,"643D6F34902D9C7EC90CB0B2BCA36C47FA37165C0005CAB026C0542CBDB6803F");
	BN_hex2bn(&e,"010001");
	BN_hex2bn(&n,"AE1CD4DC432798D933779FBD46C6E1247F0CF1233595113AA51B450F18116115");
	
	//calculate and print verification = S^e mod(n)
	BN_mod_exp(msg, s, e, n, ctx);
	printBN("Message (hex) = ", msg);

}

int main(){
	verification();
}