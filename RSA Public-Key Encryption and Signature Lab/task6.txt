#include <stdio.h>
#include <openssl/bn.h>
#define NBITS 256

void printBN(char *msg, BIGNUM * a)
{
	// Convert the BIGNUM to number string
	char*number_str = BN_bn2hex(a);

	// Print out the number string
	printf("%s %s\n", msg, number_str);

	// Free the dynamically allocated memory
	OPENSSL_free(number_str);
}

void verification(){

	//initalize all BIGNUMs needed
	BN_CTX *ctx = BN_CTX_new();
	BIGNUM *s = BN_new();
	BIGNUM *e = BN_new();
	BIGNUM *n = BN_new();
	BIGNUM *msg = BN_new();;
	
	//hardcode given values
		BN_hex2bn(&s,"46a8c14c5c1939748d2402f126f15dea60050e367233a3f81325d6e38e99c0d5032fc4514acf48837133e6df96d225173c402f9e86caeeecdb005f110237eab2579836330af88e8e93b3f8a34d0b6d922182c0e26ab0380195ce0ece31506efffb026e5745f9d508d6b534a0c3111b9bafac7257fcc19b462ccc040510ce5ec9d472694221937d4651663a4af2e81da19a21b6f50c925f9bf09f8145b40f4f4f722f0e699b9c11488330f2ef1add8318658bd498e653e6bdca98da8dcfd5772b87b8e9262ba6328cba6dbf152662c2e7fb172224ab3f96071903723c5d9cebdc69282c9b0e5f0e3e133f95225c3debee9e9fe63004b7c331ad226d3bfd473a32");
	BN_hex2bn(&e,"10001");	
	BN_hex2bn(&n,"D67333D6D73C20D000D21745B8D63E07A23FC741EE3230C9B06CFDF49FCB12980F2D3F8D4D010C820F177F622EE9B84879FB16834EADD7322593B707BFB9503FA94CC3402AE939FFD981CA1F163241DA8026B9237A87201EE3FF209A3C95446F8775069040B4329316091008233ED2DD870F6F5D51146A0A69C54F017269CFD3934C6D04A0A31B827EB19AB9EDC59EC537789F9A0834FB562E58C4090E06645BBC37DCF19F2868A856B092A35C9FBB8898081B241DAB3085AEAFB02E9E7A9DC1C0421CE202F0EAE04AD2EF900EB4C14016F06F85424A64F7A430A0FEBF2EA3275A8E8B58B8ADC319178463ED6F56FD83CB6034C474BEE69DDBE1E4E5CA0C5F15");
	
	//calculate and print verification = S^e mod(n)
	BN_mod_exp(msg, s, e, n, ctx);
	printBN("Message (hex) = ", msg);

}

int main(){
	verification();
}